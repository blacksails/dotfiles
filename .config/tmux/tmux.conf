###########################################################################
# General options

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Set colorscheme to tmuxline
source-file $HOME/.config/tmux/tmuxairline.conf

# Ring the bell if any background window rang a bell
set -g bell-action any

# Watch for activity in background windows
setw -g monitor-activity on

# scrollback size
set -g history-limit 10000

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# pass through xterm keys
set -g xterm-keys on

# remap prefix to Control + s
set -g prefix C-s
unbind C-b
bind C-s send-prefix

# force a reload of the config file
unbind r
bind r source-file $HOME/.config/tmux/tmux.conf

# use vi bindings for navigating buffer
setw -g mode-keys vi

# Faster Command Sequences
set -s escape-time 0

# copy paste settings
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -T copy-mode-vi 'v' send-keys -X begin-selection
bind -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi 'Enter' send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# default command
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# disallow automatic renaming
set -g allow-rename off

###########################################################################
# Mouse mode

set -g mouse on

# Toggle mouse on
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

###########################################################################
# Pane management / navigation

# Vertical splits with s
unbind s
bind s split-window -h -c "#{pane_current_path}"

# Vertical split with i
unbind i
bind i split-window -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Kill pane without confirmation
unbind x
bind x kill-pane

###########################################################################
# Window management / navigation

# Make new windows have home working dir
unbind c
bind c new-window -c "$HOME"

# Close window and all panes
unbind q
bind q confirm-before kill-window

# bindings for next and previous
unbind l
unbind h
bind l next-window
bind h previous-window
